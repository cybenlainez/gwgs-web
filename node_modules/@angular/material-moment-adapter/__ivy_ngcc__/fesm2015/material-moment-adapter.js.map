{"version":3,"file":"material-moment-adapter.js","sources":["../../../../../../src/material-moment-adapter/adapter/moment-date-adapter.ts","../../../../../../src/material-moment-adapter/adapter/moment-date-formats.ts","../../../../../../src/material-moment-adapter/adapter/index.ts","../../../../../../src/material-moment-adapter/public-api.ts","../../../../../../src/material-moment-adapter/index.ts"],"names":["_rollupMoment","_moment"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional, InjectionToken} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from '@angular/material/core';\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\n// TODO(mmalerba): See if we can clean this up at some point.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment, Moment, MomentFormatSpecification, MomentInput} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n/** Configurable options for {@see MomentDateAdapter}. */\nexport interface MatMomentDateAdapterOptions {\n\n  /**\n   * When enabled, the dates have to match the format exactly.\n   * See https://momentjs.com/guides/#/parsing/strict-mode/.\n   */\n  strict?: boolean;\n\n  /**\n   * Turns the use of utc dates on or off.\n   * Changing this will change how Angular Material components like DatePicker output dates.\n   * {@default false}\n   */\n  useUtc?: boolean;\n}\n\n/** InjectionToken for moment date adapter to configure options. */\nexport const MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken<MatMomentDateAdapterOptions>(\n  'MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n\n\n/** @docs-private */\nexport function MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY(): MatMomentDateAdapterOptions {\n  return {\n    useUtc: false\n  };\n}\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n\n/** Adapts Moment.js Dates for use with Angular Material. */\n@Injectable()\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n  // Note: all of the methods that accept a `Moment` input parameter immediately call `this.clone`\n  // on it. This is to ensure that we're working with a `Moment` that has the correct locale setting\n  // while avoiding mutating the original object passed to us. Just calling `.locale(...)` on the\n  // input would mutate the object.\n\n  private _localeData: {\n    firstDayOfWeek: number,\n    longMonths: string[],\n    shortMonths: string[],\n    dates: string[],\n    longDaysOfWeek: string[],\n    shortDaysOfWeek: string[],\n    narrowDaysOfWeek: string[]\n  };\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) dateLocale: string,\n    @Optional() @Inject(MAT_MOMENT_DATE_ADAPTER_OPTIONS)\n    private _options?: MatMomentDateAdapterOptions) {\n\n    super();\n    this.setLocale(dateLocale || moment.locale());\n  }\n\n  setLocale(locale: string) {\n    super.setLocale(locale);\n\n    let momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n    };\n  }\n\n  getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n    return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n  }\n\n  getDateNames(): string[] {\n    return this._localeData.dates;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (style == 'long') {\n      return this._localeData.longDaysOfWeek;\n    }\n    if (style == 'short') {\n      return this._localeData.shortDaysOfWeek;\n    }\n    return this._localeData.narrowDaysOfWeek;\n  }\n\n  getYearName(date: Moment): string {\n    return this.clone(date).format('YYYY');\n  }\n\n  getFirstDayOfWeek(): number {\n    return this._localeData.firstDayOfWeek;\n  }\n\n  getNumDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  createDate(year: number, month: number, date: number): Moment {\n    // Moment.js will create an invalid date if any of the components are out of bounds, but we\n    // explicitly check each case so we can throw more descriptive errors.\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    const result = this._createMoment({year, month, date}).locale(this.locale);\n\n    // If the result isn't valid, the date must have been out of bounds for this month.\n    if (!result.isValid()) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Moment {\n    return this._createMoment().locale(this.locale);\n  }\n\n  parse(value: any, parseFormat: string | string[]): Moment | null {\n    if (value && typeof value == 'string') {\n      return this._createMoment(value, parseFormat, this.locale);\n    }\n    return value ? this._createMoment(value).locale(this.locale) : null;\n  }\n\n  format(date: Moment, displayFormat: string): string {\n    date = this.clone(date);\n    if (!this.isValid(date)) {\n      throw Error('MomentDateAdapter: Cannot format invalid date.');\n    }\n    return date.format(displayFormat);\n  }\n\n  addCalendarYears(date: Moment, years: number): Moment {\n    return this.clone(date).add({years});\n  }\n\n  addCalendarMonths(date: Moment, months: number): Moment {\n    return this.clone(date).add({months});\n  }\n\n  addCalendarDays(date: Moment, days: number): Moment {\n    return this.clone(date).add({days});\n  }\n\n  toIso8601(date: Moment): string {\n    return this.clone(date).format();\n  }\n\n  /**\n   * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n   * string into null. Returns an invalid date for all other values.\n   */\n  deserialize(value: any): Moment | null {\n    let date;\n    if (value instanceof Date) {\n      date = this._createMoment(value).locale(this.locale);\n    } else if (this.isDateInstance(value)) {\n      // Note: assumes that cloning also sets the correct locale.\n      return this.clone(value);\n    }\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n    }\n    if (date && this.isValid(date)) {\n      return this._createMoment(date).locale(this.locale);\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any): boolean {\n    return moment.isMoment(obj);\n  }\n\n  isValid(date: Moment): boolean {\n    return this.clone(date).isValid();\n  }\n\n  invalid(): Moment {\n    return moment.invalid();\n  }\n\n  /** Creates a Moment instance while respecting the current UTC settings. */\n  private _createMoment(\n    date: MomentInput,\n    format?: MomentFormatSpecification,\n    locale?: string,\n  ): Moment {\n    const {strict, useUtc}: MatMomentDateAdapterOptions = this._options || {};\n\n    return useUtc\n      ? moment.utc(date, format, locale, strict)\n      : moment(date, format, locale, strict);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from '@angular/material/core';\n\n\nexport const MAT_MOMENT_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: 'l',\n  },\n  display: {\n    dateInput: 'l',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nimport {MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter} from './moment-date-adapter';\nimport {MAT_MOMENT_DATE_FORMATS} from './moment-date-formats';\n\nexport * from './moment-date-adapter';\nexport * from './moment-date-formats';\n\n@NgModule({\n  providers: [\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    }\n  ],\n})\nexport class MomentDateModule {}\n\n\n@NgModule({\n  imports: [MomentDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS}],\n})\nexport class MatMomentDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './adapter/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}